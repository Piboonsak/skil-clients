openapi: "3.0.1"
info:
  title: SKIL Client APIs Specification
  description: OpenApi v3 specifications for SKIL APIs.
  termsOfService: https://skymind.ai/terms.html
  contact:
    name: Skymind Inc.
    url: https://skymind.ai/professional-services/support
    email: support@skymind.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.2.1
externalDocs:
  description: Find more information about SKIL here
  url: https://docs.skymind.ai/
servers:
- url: http://localhost:9008
  description: Local Server
security:
- api_key: []
tags:
- name: Default
  description: Default tag containing all the API endpoints
- name: Authentication
  description: Authentication endpoints
- name: Utilities
  description: Utilities endpoints
- name: ModelHistory
  description: Model History endpoints
- name: Deployment
  description: Deployment Endpoints
- name: Transform
  description: Transform endpoints
- name: Inference
  description: Inference endpoints
- name: InferenceV2
  description: Inference endpoints for model server V2
- name: RetrainV2
  description: Retrain endpoints for model server V2
- name: MemMapV2
  description: Memory mapped endpoints for model server V2
- name: KNN
  description: KNN endpoints
- name: Resource
  description: Resource Endpoints
- name: Job
  description: Job endpoints
paths:
# ---------------------------------------------------------------------------------------
  # Authentication endpoint
  # ---------------------------------------------------------------------------------------
  /login:
    post:
      operationId: login
      summary: Post JSON credentials and obtain a JWT authorization token.
      tags:
      - Default
      - Authentication
      security: []
      requestBody:
        description: Login credentials.
        required: true
        content:
          'multipart/form-data':
            schema:
              properties:
                credentials:
                  $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Token'
        401:
          description: Invalid credentials
          content: 
            'application/json': {}
  /api/upload/model:
    post:
      operationId: upload
      summary: Upload a model file to SKIL for import.
      tags:
      - Default
      - Utilities
      requestBody:
        description: The file to upload.
        required: true
        content:
          'multipart/form-data':
            schema:
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/FileUploadList'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: authorization
      in: header
      description: |
        For accessing the API a valid JWT token must be passed in all the queries in
        the 'Authorization' header.


        A valid JWT token is generated by the API and returned as answer of a call
        to the route /login giving a valid user & password.


        The following syntax must be used in the 'Authorization' header :

            Bearer xxxxxx.yyyyyyy.zzzzzz
  schemas:
    Credentials:
      type: object
      properties:
        userId:
          type: string
        password:
          type: string
      example:
        userId: admin
        password: admin
    Token:
      type: object
      properties:
        token:
          type: string
      example:
        token: xxxxxxx.yyyyyyy.zzzzzz
    FileUploadList:
      type: object
      properties:
        fileUploadResponseList:
          type: array
          items:
            $ref: '#/components/schemas/FileUpload'
    FileUpload:
      type: object
      properties:
        key:
          type: string
        fileName:
          type: string
        status:
          type: string
        type:
          type: string
        path:
          type: string
        fileContent:
          type: string
          